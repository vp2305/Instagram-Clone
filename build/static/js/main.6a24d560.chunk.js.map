{"version":3,"sources":["firebase.js","Post.js","ImageUpload.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","Post","postId","user","username","imageUrl","caption","useState","comments","setComments","comment","setComment","useEffect","unsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","className","Avatar","alt","src","text","type","placeholder","value","onChange","e","target","disabled","onClick","preventDefault","add","displayName","timestamp","FieldValue","serverTimestamp","ImageUpload","image","setImage","progress","setProgress","setCaption","max","event","files","Button","ref","name","put","on","Math","round","bytesTransferred","totalBytes","error","console","log","alert","message","child","getDownloadURL","then","url","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","classes","modalStyle","posts","setPosts","open","setOpen","setusername","email","setEmail","password","setPassword","setUser","openSignIn","setOpenSignIn","onAuthStateChanged","authUser","id","post","Modal","onClose","style","Input","createUserWithEmailAndPassword","updateProfile","catch","signInWithEmailAndPassword","signOut","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a24d560.chunk.js","sourcesContent":["// go to the website click on settings and down there find config\r\n// npm i firebase\r\n\r\nimport firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyBSe7aKlewj23mx5dIBUeWD9mSNo0TBO4M\",\r\n    authDomain: \"instagram-clone-9babf.firebaseapp.com\",\r\n    projectId: \"instagram-clone-9babf\",\r\n    storageBucket: \"instagram-clone-9babf.appspot.com\",\r\n    messagingSenderId: \"630727188574\",\r\n    appId: \"1:630727188574:web:ac2fc5086dd1d426d314cf\",\r\n    measurementId: \"G-6CPYZJ2DC4\"\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage(); //this will be used to upload the pictures\r\n\r\nexport { db, auth, storage };\r\n// export default debugger;","import React, { useEffect, useState } from 'react';\r\nimport './Post.css';\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport { db } from './firebase';\r\nimport firebase from \"firebase\";\r\n\r\nfunction Post( { postId, user, username, imageUrl, caption } ) {\r\n    const [comments, setComments] = useState([]);\r\n    const [comment, setComment] = useState('');\r\n    useEffect(()=>{\r\n        let unsubscribe;\r\n        if (postId) {\r\n            unsubscribe = db\r\n                .collection(\"posts\")\r\n                .doc(postId)\r\n                .collection(\"comments\")\r\n                .orderBy('timestamp', 'desc')\r\n                .onSnapshot((snapshot) => {\r\n                    setComments(snapshot.docs.map((doc) => doc.data()));\r\n                });\r\n        }\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, [postId]);\r\n\r\n    const postComment = (e) =>{\r\n        e.preventDefault();\r\n\r\n        db.collection(\"posts\").doc(postId).collection(\"comments\").add({\r\n            text: comment,\r\n            username: user.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        });\r\n        setComment('');\r\n    }\r\n\r\n    return (\r\n        <div className = 'post'>\r\n            <div className=\"post__header\">\r\n                <Avatar \r\n                    className = \"post__avatar\"\r\n                    alt = {username}\r\n                    src = \"/static/images/avatar/1.jpg\"\r\n                />\r\n                <h3>{username}</h3>\r\n            </div>\r\n           \r\n            <img\r\n                className = \"post__image\"\r\n                src = {imageUrl}\r\n                alt = \"\"\r\n            />\r\n\r\n            <h4 className = \"post__text\">\r\n                <strong>{username} </strong>{caption}</h4>\r\n\r\n            <div className = \"post__comment\">\r\n                {comments.map((comment) =>(\r\n                    <p>\r\n                        <strong>{comment.username}</strong> {comment.text}\r\n                    </p>\r\n                ))}\r\n            </div>\r\n\r\n            {user && (\r\n                <form className = \"post__commentBox\">\r\n                    <input \r\n                    className=\"post__input\"\r\n                    type = \"text\"\r\n                    placeholder = \"Add a comment...\"\r\n                    value = {comment}\r\n                    onChange={(e) => setComment(e.target.value)}\r\n                    />\r\n                    <button\r\n                        className = \"post__button\"\r\n                        disabled = {!comment}\r\n                        type = \"submit\"\r\n                        onClick={postComment}\r\n                    > \r\n                    Post                \r\n                    </button>\r\n                </form>\r\n            )}\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import { Button } from '@material-ui/core';\r\nimport React, {useState} from 'react';\r\nimport './ImageUpload.css';\r\nimport firebase from \"firebase\";\r\nimport { storage, db } from './firebase';\r\n\r\nfunction ImageUpload({username}) {\r\n    const [image, setImage] = useState(null);\r\n    const [progress, setProgress] = useState(0);\r\n    const [caption, setCaption] = useState('');\r\n\r\n\r\n    const handleChange = (e) =>{\r\n        if (e.target.files[0]){\r\n            setImage(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const handleUpload = () =>{\r\n        const uploadTask = storage.ref(`images/${image.name}`).put(image) //this is where the image is put into the database\r\n\r\n        uploadTask.on(\r\n            \"state_changed\", \r\n            (snapshot) => {\r\n                // progress function ...\r\n                const progress = Math.round(\r\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n                );\r\n                setProgress(progress);\r\n            },\r\n            (error) => {\r\n                // Error function ...\r\n                console.log(error);\r\n                alert(error.message);\r\n            },\r\n            () => {\r\n                // complete function\r\n                storage\r\n                .ref(\"images\")\r\n                .child(image.name)\r\n                .getDownloadURL()\r\n                // ^ this will go get the download link\r\n                .then(url => {\r\n                    // post image inside db\r\n                    db.collection(\"posts\").add({\r\n                        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                        caption: caption,\r\n                        imageUrl: url,\r\n                        username: username\r\n                    });\r\n\r\n                    setProgress(0);\r\n                    setCaption(\"\");\r\n                    setImage(null);\r\n                });\r\n            }   \r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className = \"imageupload\">\r\n            <progress className=\"imageupload__progress\" value={progress} max=\"100\" />\r\n            <input type =\"text\" placeholder = \"Enter a caption...\" \r\n                onChange={event => setCaption(event.target.value)} \r\n                value={caption} />\r\n            <input type =\"file\" onChange={handleChange} />\r\n            <Button onClick={handleUpload}>\r\n                Upload\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageUpload\r\n","// To create the app npx create-react-app name of the app\n// Modal is something that is pops up for the password.\n// npm i react-instagram-embed\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Post from './Post';\nimport { auth, db } from './firebase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport { Button, Input } from '@material-ui/core';\nimport ImageUpload from './ImageUpload';\n\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [modalStyle] = useState(getModalStyle);\n  const [ posts, setPosts] = useState([]); // basically like creating variable\n  const [open, setOpen] = useState(false);\n  const [username, setusername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const [openSignIn, setOpenSignIn] = useState(false);\n\n  useEffect(() =>{\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser){\n        //user has logged in...\n        console.log(authUser);\n        setUser(authUser);\n\n      } else {\n        // user has logged out...\n        setUser(null);\n      }\n    })\n\n    return () => {\n      // perform some cleanup actions\n      // this avoids overloading\n      unsubscribe();\n    }\n  }, [user, username]);\n\n\n\n  //useEffect -> runs a piece of code based on a specific condition\n  useEffect(() => { \n    db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      // takes the a picture whenever the anything changes fire the code\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        post: doc.data()})));\n    })\n\n  }, []); // if blank when the page loads, but when its changed to posts it will load everytime the posts run\n\n\n  const signUp = (event) => {\n    event.preventDefault();\n    auth.createUserWithEmailAndPassword(email, password)\n    .then((authUser) => {\n      return authUser.user.updateProfile({\n        displayName: username,\n      })\n    })\n    .catch((error) => alert(error.message));\n  }\n\n  const signIn = (event) => {\n    event.preventDefault();\n    auth.signInWithEmailAndPassword(email, password)\n    \n    .catch((error) => alert(error.message));\n    setOpenSignIn(false);\n  }\n\n  return (\n    <div className = \"app\">\n\n      <Modal\n        open={open}\n        onClose={() => setOpen(false)}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className = \"app__signup\">\n            <center>\n              <img src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n              alt = \"\"\n              />\n            </center>\n              \n            <Input \n              placeholder = \"Username\"\n              type = \"text\"\n              value = {username}\n              onChange={(e) => setusername(e.target.value)}\n            />\n\n            <Input \n              placeholder=\"Email\"\n              type = \"text\"\n              value = {email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n\n            <Input \n              placeholder=\"Password\"\n              type = \"password\"\n              value = {password}\n              onChange={(e) => setPassword(e.target.value)}\n            />  \n            <Button type=\"submit\" onClick = {signUp}>Sign Up</Button>\n          </form>\n        </div>\n      </Modal>\n\n\n      <Modal\n        open={openSignIn}\n        onClose={() => setOpenSignIn(false)}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className = \"app__signup\">\n            \n            <center>\n              <img src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n              alt = \"\"\n              />\n            </center>\n\n            <Input \n              placeholder=\"Email\"\n              type = \"text\"\n              value = {email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n\n            <Input \n              placeholder=\"Password\"\n              type = \"password\"\n              value = {password}\n              onChange={(e) => setPassword(e.target.value)}\n            />  \n            <Button type=\"submit\" onClick = {signIn}>Sign In</Button>\n          </form>\n        </div>\n      </Modal>\n\n\n      <div className = \"app__header\">\n        <div className = \"app__headerImage\">\n          <img src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n          alt = \"\"\n          />\n        </div>\n          {user ? ( // This is like a if and or statement\n            <Button onClick={() => auth.signOut()}>Logout</Button>\n          ): (\n            <div className=\"app__logincontainer\"> \n            <Button onClick={() => setOpenSignIn(true)}>Sign In</Button>\n            <Button onClick={() => setOpen(true)}>Sign Up</Button>\n            </div>\n          \n          )}\n      </div>\n      \n      <div className = \"app__posts\">\n        {\n          posts.map(({id, post}) => (\n            <Post key ={id} postId = {id} user = {user} username = {post.username}\n                  caption = {post.caption}\n                  imageUrl = {post.imageUrl}/>\n          ))\n        }\n      </div>\n\n      {user?.displayName ? (\n        <ImageUpload username = {user.displayName}/>\n      ): (\n        <h3>Login to upload</h3>\n      )}\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}